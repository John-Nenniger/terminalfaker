/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/main/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/base64-js/index.js":
/*!*****************************************!*\
  !*** ./node_modules/base64-js/index.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n\n\n//# sourceURL=webpack:///./node_modules/base64-js/index.js?");

/***/ }),

/***/ "./node_modules/buffer/index.js":
/*!**************************************!*\
  !*** ./node_modules/buffer/index.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(global) {/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n\n\nvar base64 = __webpack_require__(/*! base64-js */ \"./node_modules/base64-js/index.js\")\nvar ieee754 = __webpack_require__(/*! ieee754 */ \"./node_modules/ieee754/index.js\")\nvar isArray = __webpack_require__(/*! isarray */ \"./node_modules/isarray/index.js\")\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///./node_modules/buffer/index.js?");

/***/ }),

/***/ "./node_modules/ieee754/index.js":
/*!***************************************!*\
  !*** ./node_modules/ieee754/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n//# sourceURL=webpack:///./node_modules/ieee754/index.js?");

/***/ }),

/***/ "./node_modules/isarray/index.js":
/*!***************************************!*\
  !*** ./node_modules/isarray/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n//# sourceURL=webpack:///./node_modules/isarray/index.js?");

/***/ }),

/***/ "./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n//# sourceURL=webpack:///(webpack)/buildin/global.js?");

/***/ }),

/***/ "./src/main/app/Cmd.js":
/*!*****************************!*\
  !*** ./src/main/app/Cmd.js ***!
  \*****************************/
/*! exports provided: TerminalCommands */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TerminalCommands\", function() { return TerminalCommands; });\n/* harmony import */ var _components_fs_FsUnit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../components/fs/FsUnit */ \"./src/main/components/fs/FsUnit.js\");\n/* harmony import */ var _components_fs_FsFile__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../components/fs/FsFile */ \"./src/main/components/fs/FsFile.js\");\n/* harmony import */ var _components_CmdHelper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../components/CmdHelper */ \"./src/main/components/CmdHelper.js\");\n/* harmony import */ var _components_path_PathHelper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../components/path/PathHelper */ \"./src/main/components/path/PathHelper.js\");\n/* harmony import */ var _components_errors_CmdValidationError__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../components/errors/CmdValidationError */ \"./src/main/components/errors/CmdValidationError.js\");\n/* harmony import */ var _components_crypto__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../components/crypto */ \"./src/main/components/crypto.js\");\n/* harmony import */ var _components_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../components/utils */ \"./src/main/components/utils.js\");\n/* harmony import */ var _Terminal__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Terminal */ \"./src/main/app/Terminal.js\");\n/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../version */ \"./src/main/version.js\");\n\n\n\n\n\n\n\n\n\n\nclass TerminalCommands {\n  /**\n   * Built-in System Commands\n   * Modelled after Linux Bash commands.\n   *\n   * @param {Terminal} terminal\n   */\n  constructor(terminal) {\n    this.terminal = terminal;\n  }\n\n  get cat() {\n    return {\n      about: \"cat [file]<br>&nbsp;&nbsp;Display the contents of the specified file.\",\n      exe: (args) => {\n        if(args.length != 2){\n            throw new _components_errors_CmdValidationError__WEBPACK_IMPORTED_MODULE_4__[\"CmdValidationError\"]('cat', \"No such file.\");\n        }\n        const { listingUnit, path } = this.terminal.getFsUnit(args);\n\n        if (!listingUnit || (listingUnit && !listingUnit.isFile())) {\n            throw new _components_errors_CmdValidationError__WEBPACK_IMPORTED_MODULE_4__[\"CmdValidationError\"]('cat', `${path}: No such file, or argument is a directory.`);\n        }\n        const content = listingUnit.content || '';\n        return content.replace(/([^>\\r\\n]?)(\\r\\n|\\n\\r|\\r|\\n)/g, '$1' + '<br>' + '$2');\n      }\n    };\n  }\n\n  /**\n   * Change into a directory.\n   **/\n  get cd() {\n    return {\n      about: \"cd [path]<br>&nbsp;&nbsp;Change directory to the specified path.\",\n      exe: (args) => {\n          if(args.length != 2){\n              return \"\";\n          }\n          var result = this.terminal.changeDirectory(args[1]);\n          if(!result){\n              return \"No such directory.\";\n          }\n          return \"\";\n      }\n    };\n  }\n\n  /**\n   * Clears the terminal using a special flag on the resetPrompt function.\n   **/\n  get clear() {\n    return {\n      about: \"clear<br>&nbsp;&nbsp;Clear the terminal window.\",\n      exe: () => {\n          return \"\";    // Functionality is handled internally by watching for this specific command name when resetting the prompt.\n      }\n    }\n\n  }\n\n  /**\n   * Echos text to the terminal\n   **/\n  get echo() {\n    return {\n      about: \"echo [string]<br>&nbsp;&nbsp;Display a line of text.\",\n      exe: function(args) {\n        var result = args.slice();\n        result.shift();\n        return result.join(\" \");\n      }\n    };\n  }\n\n  /**\n   * Encryption commands which use a password a string.\n   **/\n  get encrypt() {\n    return {\n      about:  \"encrypt [message] [password]<br>&nbsp;&nbsp;Encrypt a provided message using the password.\",\n      exe: (args) => {\n        if(args.length != 3){\n            return \"encrypt: Invalid number of arguments.\";\n        }\n        var result = _components_crypto__WEBPACK_IMPORTED_MODULE_5__[\"Tea\"].encrypt(args[1], args[2]);\n        return result;\n      }\n    };\n  }\n\n  get decrypt() {\n    return {\n      about:  \"decrypt [encoded] [password]<br>&nbsp;&nbsp;Decrypt a provided message using the password.\",\n      exe: (args) => {\n        if(args.length != 3){\n            return \"decrypt: Invalid number of arguments.\";\n        }\n        var result = _components_crypto__WEBPACK_IMPORTED_MODULE_5__[\"Tea\"].decrypt(args[1], args[2]);\n        return result;\n      }\n    };\n  }\n\n  /**\n   * Lists all available commands or the help for a given command.\n   **/\n  get help() {\n    return {\n      about: \"help [command]<br>&nbsp;&nbsp;Show a list of available commands, or help for a specific command.\",\n      exe: (args) => {\n        var output = \"\";\n        if (args.length == 2 && args[1] && args[1].toLowerCase() in this) {\n          output += \"<strong>\" + args[1].toLowerCase() + \"</strong>: \" + this[args[1].toLowerCase()].about + \"\";\n        } else {\n          output += \"TERMFAKE bash, version \" + _version__WEBPACK_IMPORTED_MODULE_8__[\"version\"] + \"-release (x86_64-pc-linux-gnu)<br>These shell commands are defined internally.  Type 'help' to see this list.<br>Type 'help name' to find out more about the function 'name'.<br><br>\";\n          output += \"\";\n\n          Object(_components_utils__WEBPACK_IMPORTED_MODULE_6__[\"getAllMethodNames\"])(this).sort().forEach((cName) => {\n            if(this[cName].about && !this[cName].hidden) {\n              output += \"<strong>\" + cName + \"</strong>&nbsp; \";\n            }\n          });\n        }\n        output += \"<br><br>\";\n        return output;\n      }\n    };\n  }\n\n  /**\n   * Lists the recent builtInCommands.\n   **/\n  get history() {\n    return {\n      about: \"history [-OPTIONS]<br>&nbsp;&nbsp;Display the list of recent commands.<br>&nbsp;&nbsp;-c clear the history list.\",\n      exe: (args) => {\n        if (args.length == 2 && args[1] == \"-c\") {\n          localStorage.setItem(\"history\", []);\n          this.terminal.history = [];\n        }\n        var history = this.terminal.history;\n        var output = \"\";\n\n        history.forEach(function (element, index) {\n          output += index + \"&nbsp;&nbsp;\" + element + \"<br>\";\n        });\n        return output;\n      }\n    };\n  }\n\n  /**\n   * Lists the files and directories in the current path.\n   **/\n  get ls() {\n    return {\n      about: \"ls [-OPTIONS]<br>&nbsp;&nbsp;List directory contents.<br>&nbsp;&nbsp;-l use a long listing format.<br>&nbsp;&nbsp;-a do not ignore entries starting with a period (.).\",\n      exe: (args) => {\n        // TOOD: Add to constant\n        const supportedFlagsList = ['a', 'l'];\n        const { listingUnit, path } = this.terminal.getFsUnit(args);\n        if (!listingUnit) {\n          throw new _components_errors_CmdValidationError__WEBPACK_IMPORTED_MODULE_4__[\"CmdValidationError\"]('ls', `${path}: No such file or directory`);\n        }\n        const flagList = _components_CmdHelper__WEBPACK_IMPORTED_MODULE_2__[\"CmdHelper\"].parseFlags(args, supportedFlagsList);\n        let output = '';\n\n        switch (listingUnit.type) {\n          case _components_fs_FsUnit__WEBPACK_IMPORTED_MODULE_0__[\"FS_UNIT_TYPE\"].FILE:\n            output = flagList.has('l') ?\n              [_components_CmdHelper__WEBPACK_IMPORTED_MODULE_2__[\"CmdHelper\"].lsRenderFullLine(listingUnit)].join('\\n') :\n              [_components_CmdHelper__WEBPACK_IMPORTED_MODULE_2__[\"CmdHelper\"].lsRenderOneLine(listingUnit)].join('  ');\n            break;\n\n          case _components_fs_FsUnit__WEBPACK_IMPORTED_MODULE_0__[\"FS_UNIT_TYPE\"].DIR:\n            const dirContent = flagList.has('a') ?\n              listingUnit.content :\n              listingUnit.content.filter(it => it.name[0] !== '.');\n\n            output = flagList.has('l') ?\n              dirContent.map(fsUnit => _components_CmdHelper__WEBPACK_IMPORTED_MODULE_2__[\"CmdHelper\"].lsRenderFullLine(fsUnit)).join('\\n') :\n              dirContent.map(fsUnit => _components_CmdHelper__WEBPACK_IMPORTED_MODULE_2__[\"CmdHelper\"].lsRenderOneLine(fsUnit)).join('  ');\n            break;\n\n          default:\n            output = '';\n        }\n        return '<pre>'+output+'</pre>';\n      }\n    };\n  }\n\n  /**\n   * Print the name of the current/working directory.\n   */\n  get pwd() {\n    return {\n      about: \"pwd<br>&nbsp;&nbsp;Print the name of the current working directory.\",\n      exe: () => {\n          return this.terminal.fs.pwd();\n      }\n    };\n  }\n\n  /**\n   * Reset the local storage data for this app.\n   **/\n  get reboot() {\n    return {\n      about: \"reboot<br>&nbsp;&nbsp;Reboot the terminal and reset saved environment.\",\n      exe: () => {\n        localStorage.removeItem(\"filesystem\");\n        localStorage.removeItem(\"history\");\n        this.terminal.initSession();\n        setTimeout(function() {\n            // Delay terminal boot to wait for initializing session to complete.\n            this.terminal.bootTerminalStart(document.getElementById(\"terminal\"));\n        }, 5);\n        return \"\";\n      }\n    };\n  }\n\n  /**\n   * Delete a file with the given name.\n   * TODO: Check if error messages are rigth\n   **/\n  get rm() {\n    return {\n      about: \"rm [name]<br>&nbsp;&nbsp;Delete the file with the specified name in the current directory.\",\n      exe: (args) => {\n        if(args.length == 1){\n          throw new _components_errors_CmdValidationError__WEBPACK_IMPORTED_MODULE_4__[\"CmdValidationError\"]('rm', \"No filename specified.\");\n        }\n        if(args.length > 2){\n          throw new _components_errors_CmdValidationError__WEBPACK_IMPORTED_MODULE_4__[\"CmdValidationError\"]('rm', \"Too many parameters supplied.\");\n        }\n        const { listingUnit, path } = this.terminal.getFsUnit(args);\n        if (!listingUnit) {\n            throw new _components_errors_CmdValidationError__WEBPACK_IMPORTED_MODULE_4__[\"CmdValidationError\"]('rm', `${path}: No such file, or directory.`);\n        }\n        const preparedPath = path.split('/').filter(it => it.length);\n        const targetUnit = this.terminal.fs.get(preparedPath);\n\n        // TODO: Add flag support here\n        if (targetUnit.name === _components_fs_FsUnit__WEBPACK_IMPORTED_MODULE_0__[\"FS_ROOT_NAME\"]) {\n            throw new _components_errors_CmdValidationError__WEBPACK_IMPORTED_MODULE_4__[\"CmdValidationError\"]('rm', `${path}: Unable to remove root catalogue`);\n        }\n        if (targetUnit.isDir()) {\n            throw new _components_errors_CmdValidationError__WEBPACK_IMPORTED_MODULE_4__[\"CmdValidationError\"]('rm', `${path}: Unable to remove directory.`);\n        }\n\n        targetUnit\n          .parentDir\n          .remove(targetUnit)\n\n        return \"\";\n      }\n    };\n  }\n\n  /**\n   * Create an empty file with the given name.\n   **/\n  get touch() {\n    return {\n      about: \"touch [name]<br>&nbsp;&nbsp;Create a file with the specified name in the current directory.\",\n      exe: (args) => {\n        if(args.length == 1){\n          throw new _components_errors_CmdValidationError__WEBPACK_IMPORTED_MODULE_4__[\"CmdValidationError\"]('touch', \"No filename specified.\");\n        }\n\n        if(args.length > 2){\n          throw new _components_errors_CmdValidationError__WEBPACK_IMPORTED_MODULE_4__[\"CmdValidationError\"]('touch', \"Too many parameters supplied.\");\n        }\n\n        const { listingUnit, path } = this.terminal.getFsUnit(args);\n\n        const preparedPath = this.terminal.createFullPath(path);\n        const newFileName = preparedPath.pop();\n\n        if (!_components_path_PathHelper__WEBPACK_IMPORTED_MODULE_3__[\"PathHelper\"].isValidFilename(newFileName)) {\n          throw new _components_errors_CmdValidationError__WEBPACK_IMPORTED_MODULE_4__[\"CmdValidationError\"]('touch', `${path}: Invalid file name.`);\n        }\n        if (listingUnit && listingUnit.isDir()) {\n          throw new _components_errors_CmdValidationError__WEBPACK_IMPORTED_MODULE_4__[\"CmdValidationError\"]('touch', `${path}: Unable to create directory.`);\n        }\n        if (listingUnit && listingUnit.isFile()) {\n          throw new _components_errors_CmdValidationError__WEBPACK_IMPORTED_MODULE_4__[\"CmdValidationError\"]('touch', `${path}: File already exists.`);\n        }\n\n        this.terminal.fs\n          .get(preparedPath)\n          .add(new _components_fs_FsFile__WEBPACK_IMPORTED_MODULE_1__[\"FsFile\"](newFileName, \"\"));\n\n        return \"\";\n      }\n    };\n  }\n\n  /**\n   * Get the version, author and repo information for Terminal Faker.\n   */\n  get version() {\n    return {\n      about: \"version<br>&nbsp;&nbsp;Display the version and attribution of this terminal application.\",\n      exe: () => {\n        return \"Terminal Faker: version \" + this.terminal.version + \" (https://github.com/syntaxseed/terminalfaker) by Sherri Wheeler.\";\n      }\n    };\n  }\n\n}\n\n\n//# sourceURL=webpack:///./src/main/app/Cmd.js?");

/***/ }),

/***/ "./src/main/app/Terminal.js":
/*!**********************************!*\
  !*** ./src/main/app/Terminal.js ***!
  \**********************************/
/*! exports provided: Terminal */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Terminal\", function() { return Terminal; });\n/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../version */ \"./src/main/version.js\");\n/* harmony import */ var _components_path_PathHelper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../components/path/PathHelper */ \"./src/main/components/path/PathHelper.js\");\n/* harmony import */ var _components_InputHelper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../components/InputHelper */ \"./src/main/components/InputHelper.js\");\n/* harmony import */ var _components_fs_FileSystem__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../components/fs/FileSystem */ \"./src/main/components/fs/FileSystem.js\");\n/* harmony import */ var _components_keysMap__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../components/keysMap */ \"./src/main/components/keysMap.js\");\n/* harmony import */ var _components_fs_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../components/fs/utils */ \"./src/main/components/fs/utils.js\");\n\n\n\n\n\n\n\n/**\n * TerminalFaker\n * A JavaScript Bash terminal simulation.\n */\nclass Terminal {\n  // public version: string;\n  // private path: string;\n  // private domFileSystem;\n  // private domFileSystemPointer\n  // private customPrompt;\n  // private commands;\n  // private fs: FileSystem;\n  // private history;\n  // private historyIndex: number;\n  // private MAX_HISTORY: number;\n  // private options: { useBootLoader?: boolean; bootMessageLines?: string[]; }\n\n  constructor(options) {\n    this.commands = undefined;\n    this.fs = new _components_fs_FileSystem__WEBPACK_IMPORTED_MODULE_3__[\"FileSystem\"]();\n    this.history = [];\n    this.historyIndex = 0;\n    this.MAX_HISTORY = 20;\n    this.version = _version__WEBPACK_IMPORTED_MODULE_0__[\"version\"];\n    this.options = options;\n  }\n\n    /**\n   * Function parsing path for commands like: cmd [flags] [path]\n   * Parse absolute and relative paths. If relative - takes current dir\n   * and resolves with '..' notation\n   *\n   * @param {String[]} args Args in format ['cmd', 'flag1', 'flag2', 'path']\n   * @returns {Object} root\n   * @returns {FsUnit} [root.listingUnit] Dir or File\n   * @returns {String} root.path\n   */\n  getFsUnit(args) {\n    let listingUnit = this.fs.pointer;\n    const path = args.slice(1).filter(it => it.indexOf('-') !== 0)[0] || '.';\n    if (args.length > 1) {\n        if (path !== '.') {\n            const preparedPath = this.createFullPath(path);\n            listingUnit = this.fs.get(preparedPath);\n            if (!listingUnit) {\n                return {\n                    path\n                };\n            }\n        }\n    }\n    return {\n        listingUnit,\n        path\n    };\n  }\n\n  /**\n   * Create absolute path from passed param. Param could be\n   * relative or absolute path\n   *\n   * @param {String} path Path to filesistem unit in unix format\n   * @returns {String[]}\n   */\n  createFullPath(pathToUnit) {\n    const startDir = pathToUnit.indexOf('/') === 0 ?\n      '/' :\n      this.fs.pwd();\n    return _components_path_PathHelper__WEBPACK_IMPORTED_MODULE_1__[\"PathHelper\"].resolveToArray(startDir, pathToUnit);\n  }\n\n     // Auxiliary functions\n\n  resetPrompt(terminal, prompt, clear) {\n    var newPrompt = prompt.parentNode.cloneNode(true);\n\n    // Make sure all other prompts are no longer editable:\n    var promptsAll = document.querySelectorAll(\"[contenteditable=true]\");\n    for (var i = 0; i < promptsAll.length; i++) {\n        promptsAll[i].setAttribute(\"contenteditable\", false);\n    }\n\n    // ??????\n    // if (this.prompt) {\n    //     newPrompt.querySelector(\".prompt\").textContent = this.prompt;\n    // }\n    if ((typeof clear !== 'undefined') && clear) {\n        while (terminal.firstChild) terminal.removeChild(terminal.firstChild);\n    }\n    terminal.appendChild(newPrompt);\n    newPrompt.querySelector(\".prompt\").innerHTML = this.customPrompt();\n    newPrompt.querySelector(\".input\").innerHTML = \" \";\n    newPrompt.querySelector(\".input\").focus();\n  }\n\n  runCommand(cmd, args) {\n    let cmdRunResult = '';\n    try {\n      cmdRunResult = this.commands[cmd].exe(args);\n    } catch (error) {\n      if (error.type === 'CmdValidationError') {\n        cmdRunResult = error.message;\n      }\n    }\n    return cmdRunResult;\n  }\n\n  /**\n   * Expect an array of arrays\n   * Send command array one at a time via .reduce to the commandRunner\n   * Accumulates the 'stdout' and appends to the next command array as final argument\n   *\n   * @param domElement\n   * @param {String[][]} preparedInput\n   */\n  dispatchToCommandRunner(domElement, preparedInput) {\n    const stdout = preparedInput.reduce((accumulator, current) => {\n      const output = current.concat(accumulator);\n      return this.commandRunner(domElement, output);\n    }, []);\n    return stdout;\n  };\n\n  commandRunner(domElement, commandArray) {\n    if (commandArray[0].toLowerCase() in this.commands) {\n      return this.runCommand(commandArray[0].toLowerCase(), commandArray);\n    } else {\n      // TODO: Move this to display method\n      domElement.innerHTML += commandArray[0] + \": command not found\";\n    }\n  }\n\n  displayStdout(terminal, cmdRunResult) {\n    if (cmdRunResult) {\n      terminal.innerHTML += `<div>${cmdRunResult}</div>`;\n    }\n  }\n\n  updateHistory(cmd) {\n    if (this.history.length >= this.MAX_HISTORY) {\n        this.history.shift();\n    }\n    this.history.push(cmd);\n    localStorage.setItem(\"history\", this.history);\n    this.historyIndex = this.history.length;\n  }\n\n  browseHistory(prompt, direction) {\n    var changedPrompt = false;\n    if (direction == _components_keysMap__WEBPACK_IMPORTED_MODULE_4__[\"KEY_CODE_MAP\"].KEY_UP && this.historyIndex > 0) {\n        prompt.textContent = this.history[--this.historyIndex];\n        changedPrompt = true;\n    } else if (direction == _components_keysMap__WEBPACK_IMPORTED_MODULE_4__[\"KEY_CODE_MAP\"].KEY_DOWN) {\n        if (this.historyIndex < this.history.length)++this.historyIndex;\n        if (this.historyIndex < this.history.length) prompt.textContent = this.history[this.historyIndex];\n        else prompt.textContent = \" \";\n        changedPrompt = true;\n    }\n\n    if (changedPrompt) {\n        try {\n            var range = document.createRange();\n            var sel = window.getSelection();\n            range.setStart(prompt.childNodes[0], prompt.textContent.length);\n            range.collapse(true);\n            sel.removeAllRanges();\n            sel.addRange(range);\n        } catch (err) { }\n    }\n  }\n\n  autoCompleteInput(input) {\n    const inputArray = input.split(\" \")\n    if (inputArray.length > 1) {\n      return this.autoCompleteFiles(inputArray)\n    } else if (inputArray.length == 1) {\n      return this.autoCompleteCommands(input.replace(/\\s+/g, \"\"))\n    } else {\n      return [];\n    }\n  }\n\n  autoCompleteCommands(input) {\n    const suggestions = [];\n    const customCommands = this.commands\n\n    const re = new RegExp(\"^\" + input, \"ig\")\n    for (let command in customCommands) {\n      if(customCommands.hasOwnProperty(command) && command.match(re)) {\n        suggestions.push(command);\n      }\n    }\n\n    const prototype = Object.getPrototypeOf(this.commands)\n    const prototypeCommands = Object.getOwnPropertyNames(prototype)\n    \n    for(let command of prototypeCommands){\n      if(prototype.hasOwnProperty(command) && command.match(re)){\n        suggestions.push(command);\n      }\n    }\n    return suggestions;\n  }\n\n  autoCompleteFiles(inputArray) {\n    const suggestions = [];\n    const { listingUnit } = this.getFsUnit([\"ls\"])\n    const names = listingUnit.content.map((element) => {\n      return element.name\n    })\n    const re = new RegExp(\"^\" + inputArray[inputArray.length - 1], \"ig\")\n    for (let name of names) {\n      if (name.match(re)) {\n        suggestions.push([inputArray[0], name].join(\" \"))\n      }\n    }\n    return suggestions;\n  }\n\n  saveFilesystem() {\n    var strFilesystem;\n    if (typeof (XMLSerializer) !== 'undefined') {\n        strFilesystem = (new XMLSerializer()).serializeToString(this.domFileSystem);\n    } else if ('outerHTML' in this.domFileSystem) {\n        strFilesystem = this.domFileSystem.outerHTML;\n    } else {\n        strFilesystem = Object(_components_fs_utils__WEBPACK_IMPORTED_MODULE_5__[\"fsToXML\"])(this.fs); // TODO: Saving doesn't work.\n    }\n    localStorage.setItem(\"filesystem\", strFilesystem);\n  }\n\n  bootTerminalStart(terminal) {\n    var defaultLine = \"Type 'help' to get started.\";\n    let bootMessage = this.options.bootMessageLines;\n    if (!this.options.bootMessageLines || !this.options.bootMessageLines.length) {\n      bootMessage = [defaultLine];\n    }\n\n    if (!this.options.useBootLoader) {\n      bootMessage = [defaultLine];\n    }\n\n    var boot = document.getElementById(\"boot\");\n    if (boot == null) {\n        var bootElement = document.createElement('p');\n        bootElement.setAttribute('id', 'boot');\n        terminal.insertBefore(bootElement, terminal.firstChild);\n    }\n    boot = document.getElementById(\"boot\");\n    this.bootTerminalMessage(terminal, boot, bootMessage, 0);\n  }\n\n  bootTerminalMessage(terminal, bootElement, introLines, num) {\n    if (num == 0) {\n        // First hide the prompt and clear any defaul message:\n        terminal.querySelector(\".hidden\").style.display = 'none';\n        bootElement.innerHTML = \"\";\n    }\n    bootElement.innerHTML += introLines[num];\n    if (num + 1 in introLines) {\n        // If we have more lines, add the next afer a delay.\n        setTimeout(() => {\n            this.bootTerminalMessage(terminal, bootElement, introLines, num + 1);\n        }, 500);\n    } else {\n        terminal.querySelector(\".hidden\").style.display = ''; // Show the prompt.\n        terminal.querySelector(\".input\").focus();\n    }\n  }\n\n  changeDirectory(path) {\n    if (path === '.') {\n      return true;\n    }\n    try {\n      const startDir = path.indexOf('/') === 0 ?\n        '/' :\n        this.fs.pwd();\n      const preparedPath = _components_path_PathHelper__WEBPACK_IMPORTED_MODULE_1__[\"PathHelper\"].resolveToArray(startDir, path);\n\n      this.fs.cd(preparedPath);\n    } catch {\n        return false;\n    }\n    this.path = this.fs.pwd();\n    return true;\n  }\n\n  init(elem, commands, customPrompt, initialFilesystem) {\n    this.commands = commands;\n    this.customPrompt = customPrompt;\n    this.fs = initialFilesystem;\n\n    this.initSession();\n\n    elem.addEventListener(\"keydown\", (event) => {\n      if (event.keyCode == _components_keysMap__WEBPACK_IMPORTED_MODULE_4__[\"KEY_CODE_MAP\"].KEY_TAB) {\n        var prompt = event.target;\n        var suggestions = this.autoCompleteInput(prompt.textContent);\n\n        if (suggestions.length == 1) {\n          prompt.textContent = suggestions[0];\n          var range = document.createRange();\n          var sel = window.getSelection();\n          range.setStart(prompt.childNodes[0], suggestions[0].length);\n          range.collapse(true);\n          sel.removeAllRanges();\n          sel.addRange(range);\n        }\n\n        event.preventDefault(true);\n        return false;\n      }\n    });\n\n    elem.addEventListener(\"keyup\", (event) => {\n      if (this.historyIndex < 0) return;\n      this.browseHistory(event.target, event.keyCode);\n    });\n\n    elem.addEventListener(\"keypress\", (event) => {\n      const prompt = event.target;\n      if (event.keyCode != _components_keysMap__WEBPACK_IMPORTED_MODULE_4__[\"KEY_CODE_MAP\"].KEY_ENTER) return false;\n\n      const enteredComand = prompt.textContent.trim();\n\n      // Split entered command by spaces, but not spaces in quotes.\n      const input = enteredComand.match(/(?=\\S)[^\"\\s]*(?:\"[^\\\\\"]*(?:\\\\[\\s\\S][^\\\\\"]*)*\"[^\"\\s]*)*/g);\n\n      if (input == null) {\n        this.resetPrompt(elem, prompt, false);\n        event.preventDefault();\n        return;\n      }\n\n      // Execute the sanitization, dispatching, and display\n      this.updateHistory(enteredComand);\n      const sanitized = _components_InputHelper__WEBPACK_IMPORTED_MODULE_2__[\"InputHelper\"].sanitize(input);\n      const commandOutput = this.dispatchToCommandRunner(elem, sanitized);\n      this.displayStdout(elem, commandOutput);\n\n      // Reset the prompt, and the given array of command also clear the screen.\n      this.resetPrompt(elem, prompt, (['clear', 'reboot'].indexOf(input[0].toLowerCase()) >= 0));\n      event.preventDefault();\n    });\n\n    elem.querySelector(\".prompt\").innerHTML = this.customPrompt();\n    elem.querySelector(\".input\").focus();\n\n    // this.term = elem;\n\n    // Run the custom boot loader, unless disabled.\n    this.bootTerminalStart(document.getElementById(\"terminal\"));\n\n    return this;\n  }\n\n  initSession() {\n    this.history = (localStorage.getItem(\"history\") ? localStorage.getItem(\"history\").split(\",\") : []);\n    this.historyIndex = this.history.length;\n\n    var fileSystemStr = (localStorage.getItem(\"filesystem\") ? localStorage.getItem(\"filesystem\") : Object(_components_fs_utils__WEBPACK_IMPORTED_MODULE_5__[\"fsToXML\"])(this.fs));\n\n    this.domFileSystem = (new DOMParser).parseFromString(fileSystemStr, \"text/xml\");\n\n    this.path = \"/\";\n    this.domFileSystemPointer = this.domFileSystem.querySelector('d');\n}\n\n}\n\n//# sourceURL=webpack:///./src/main/app/Terminal.js?");

/***/ }),

/***/ "./src/main/boot.js":
/*!**************************!*\
  !*** ./src/main/boot.js ***!
  \**************************/
/*! exports provided: bootMessageLines */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"bootMessageLines\", function() { return bootMessageLines; });\n/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./version */ \"./src/main/version.js\");\n\n\n/**\n * The bootloader message that will appear line by line on terminal boot.\n * This is the 'long' format.\n * To skip this, set useBootLoader to false in the on-page configuration.\n * In HTML format.\n */\nconst bootMessageLines = [\n            \"System loading...<br>\",\n            (new Date()).toString()+\"<br>\",\n            \"&nbsp;_______&nbsp;&nbsp;&nbsp;______&nbsp;<br>|__&nbsp;&nbsp;&nbsp;__|&nbsp;|&nbsp;&nbsp;____|<br>&nbsp;&nbsp;&nbsp;|&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;|__&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;|&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;__|&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;|&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;|_|&nbsp;&nbsp;&nbsp;&nbsp;|_|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>\",\n            \"Terminal Faker version \"+_version__WEBPACK_IMPORTED_MODULE_0__[\"version\"]+\"<br>\",\n            \"By Sherri Wheeler (SyntaxSeed.com)<br>\",\n            \"Ready. Type 'help' to get started.<br><br>\"\n        ];\n\n\n//# sourceURL=webpack:///./src/main/boot.js?");

/***/ }),

/***/ "./src/main/components/CmdHelper.js":
/*!******************************************!*\
  !*** ./src/main/components/CmdHelper.js ***!
  \******************************************/
/*! exports provided: CmdHelper */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CmdHelper\", function() { return CmdHelper; });\nclass CmdHelper {\n /**\n  * Take every element from arg array with dash '-',\n  * remove duplicates and invalid flags\n  *\n  * @param {String[]} args In format ['ls', '-la', '/']\n  * @param {String[]} supportedFlagsList Such as ['a', 'l]\n  * @returns {Set}\n  */\n  static parseFlags(args, supportedFlagsList) {\n    return new Set(\n        args\n        .filter(option => option.indexOf('-') === 0)\n        .map(option => option.replace('-', ''))\n        .join('')\n        .split('')\n        .filter(option => supportedFlagsList.includes(option))\n    );\n  }\n\n\n /**\n  * Format date to DD MMM HH:mm\n  *\n  * @param {Date} date Js Date type\n  * @returns {String}\n  */\n  static formatDate(date) {\n    const [\n        _weekDay,\n        day,\n        mon,\n        _year,\n        time\n    ] = date.toUTCString().split(' ');\n    return [day, mon, time.split(':').slice(0, -1).join(':')].join(' ');\n  }\n\n /**\n  * Render for ls -l flag\n  *\n  * @param {FsUnit} fsUnit File, Dir or Link\n  * @returns {String}\n  */\n  static lsRenderFullLine(fsUnit) {\n    const unitType = fsUnit.isFile() ? '-' : 'd';\n    const unitSize = (fsUnit.size+'').padStart(6, ' ');\n    return `<span>${unitType}rw-r--r--</span>  ` +\n        `<span>11</span>  ` +\n        `<span>guest</span>  ` +\n        `<span>guest</span>  ` +\n        `<span>${unitSize}</span>  ` +\n        `<span>${CmdHelper.formatDate(new Date(fsUnit.lastMod))}</span>  ` +\n        `<span class='filesystem-${fsUnit.type}'>${fsUnit.name}</span>`;\n  }\n\n /**\n  * Render for default ls\n  *\n  * @param {FsUnit} fsUnit File, Dir or Link\n  * @returns {String}\n  */\n  static lsRenderOneLine(fsUnit) {\n    return `<span class='filesystem-${fsUnit.type}'>${fsUnit.name}</span>`;\n  }\n}\n\n\n//# sourceURL=webpack:///./src/main/components/CmdHelper.js?");

/***/ }),

/***/ "./src/main/components/InputHelper.js":
/*!********************************************!*\
  !*** ./src/main/components/InputHelper.js ***!
  \********************************************/
/*! exports provided: InputHelper */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"InputHelper\", function() { return InputHelper; });\nclass InputHelper {\n\n  static trim(input) {\n    return input.map(e => {\n      if (e.charAt(0) === '\"' && e.charAt(e.length - 1) === '\"') {\n        return e.substr(1, e.length - 2);\n      } else {\n        return e;\n      }\n    });\n  }\n\n  /**\n   * If commands are piped, process array > string > array\n   * Return an array of arrays (even on single command)\n   *\n   * @param {String[]} input\n   * @returns {String[][]}\n   */\n  static sanitize(input) {\n    const preparedInput = InputHelper.trim(input)\n    if (preparedInput.indexOf('|') !== -1) {\n      let splitArray = InputHelper.splitArrayOnPipe(preparedInput);\n      let argumentArray = InputHelper.makeArgumentArray(splitArray);\n      let filteredArray = InputHelper.filterEmptyArgs(argumentArray);\n      return filteredArray;\n    } else {\n      return [preparedInput];\n    }\n  }\n\n  /**\n   * Rejoin array, split on pipes\n   *\n   * @param {String[]} cmdInput\n   * @returns {String[]}\n   */\n  static splitArrayOnPipe(cmdInput) {\n    let joinedInput = cmdInput.join(\" \");\n    let pipeSplit = joinedInput.split(\"|\");\n    let inputStrings = pipeSplit.map(item => item.trim());\n    return inputStrings;\n  }\n\n  /**\n   *\n   * @param {String[]} commandArray\n   * @returns {String[][]}\n   */\n  static makeArgumentArray(commandArray) {\n    let argumentArray = commandArray.map(item => {\n      if (item.indexOf(\" \") === -1) {\n        return [item];\n      } else {\n        return item.split(\" \");\n      }\n    });\n    return argumentArray;\n  }\n\n  /**\n   *\n   * @param {String[]} commandArray\n   * @returns {String[][]}\n   */\n  static filterEmptyArgs(commandArray) {\n    return commandArray.filter(\n      item => item.length >= 1 && item[0].length > 0\n    );\n  }\n\n}\n\n//# sourceURL=webpack:///./src/main/components/InputHelper.js?");

/***/ }),

/***/ "./src/main/components/crypto.js":
/*!***************************************!*\
  !*** ./src/main/components/crypto.js ***!
  \***************************************/
/*! exports provided: Tea */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(Buffer) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Tea\", function() { return Tea; });\n\n\nfunction _instanceof(left, right) { if (right != null && typeof Symbol !== \"undefined\" && right[Symbol.hasInstance]) { return right[Symbol.hasInstance](left); } else { return left instanceof right; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!_instanceof(instance, Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n// The following has been transpiled from the original ES6 - ES5. The code above was added by BabelJS.\n\n\n// tea-block.js from https://github.com/chrisveness/crypto\n/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */\n\n/* Block TEA (xxtea) Tiny Encryption Algorithm                        (c) Chris Veness 2002-2018  */\n\n/*                                                                                   MIT Licence  */\n\n/* www.movable-type.co.uk/scripts/tea-block.html                                                  */\n\n/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */\n\n/**\n * Tiny Encryption Algorithm. David Wheeler & Roger Needham, Cambridge University Computer Lab.\n *\n * www.movable-type.co.uk/scripts/tea.pdf   - TEA, a Tiny Encryption Algorithm (1994)\n * www.movable-type.co.uk/scripts/xtea.pdf  - Tea extensions (1997)\n * www.movable-type.co.uk/scripts/xxtea.pdf - Correction to xtea (1998)\n */\nvar Tea =\n/*#__PURE__*/\nfunction () {\n  function Tea() {\n    _classCallCheck(this, Tea);\n  }\n\n  _createClass(Tea, null, [{\n    key: \"encrypt\",\n\n    /**\n     * Encrypts text using Corrected Block TEA (xxtea) algorithm.\n     *\n     * @param   {string} plaintext - String to be encrypted (multi-byte safe).\n     * @param   {string} password - Password to be used for encryption (1st 16 chars).\n     * @returns {string} Encrypted text (encoded as base64).\n     */\n    value: function encrypt(plaintext, password) {\n      plaintext = String(plaintext);\n      password = String(password);\n      if (plaintext.length == 0) return ''; // nothing to encrypt\n      //  v is n-word data vector; converted to array of longs from UTF-8 string\n\n      var v = Tea.strToLongs(Tea.utf8Encode(plaintext)); //  k is 4-word key; simply convert first 16 chars of password as key\n\n      var k = Tea.strToLongs(Tea.utf8Encode(password).slice(0, 16));\n      var cipher = Tea.encode(v, k); // convert array of longs to string\n\n      var ciphertext = Tea.longsToStr(cipher); // convert binary string to base64 ascii for safe transport\n\n      var cipherbase64 = Tea.base64Encode(ciphertext);\n      return cipherbase64;\n    }\n    /**\n     * Decrypts text using Corrected Block TEA (xxtea) algorithm.\n     *\n     * @param   {string} ciphertext - String to be decrypted.\n     * @param   {string} password - Password to be used for decryption (1st 16 chars).\n     * @returns {string} Decrypted text.\n     * @throws  {Error}  Invalid ciphertext\n     */\n\n  }, {\n    key: \"decrypt\",\n    value: function decrypt(ciphertext, password) {\n      ciphertext = String(ciphertext);\n      password = String(password);\n      if (ciphertext.length == 0) return ''; // nothing to decrypt\n      //  v is n-word data vector; converted to array of longs from base64 string\n\n      var v = Tea.strToLongs(Tea.base64Decode(ciphertext)); //  k is 4-word key; simply convert first 16 chars of password as key\n\n      var k = Tea.strToLongs(Tea.utf8Encode(password).slice(0, 16));\n      var plain = Tea.decode(v, k);\n      var plaintext = Tea.longsToStr(plain); // strip trailing null chars resulting from filling 4-char blocks:\n\n      var plainUnicode = Tea.utf8Decode(plaintext.replace(/\\0+$/, ''));\n      return plainUnicode;\n    }\n    /**\n     * XXTEA: encodes array of unsigned 32-bit integers using 128-bit key.\n     *\n     * @param   {number[]} v - Data vector.\n     * @param   {number[]} k - Key.\n     * @returns {number[]} Encoded vector.\n     */\n\n  }, {\n    key: \"encode\",\n    value: function encode(v, k) {\n      if (v.length < 2) v[1] = 0; // algorithm doesn't work for n<2 so fudge by adding a null\n\n      var n = v.length;\n      var delta = 0x9e3779b9;\n      var q = Math.floor(6 + 52 / n);\n      var z = v[n - 1],\n          y = v[0];\n      var mx,\n          e,\n          sum = 0;\n\n      while (q-- > 0) {\n        // 6 + 52/n operations gives between 6 & 32 mixes on each word\n        sum += delta;\n        e = sum >>> 2 & 3;\n\n        for (var p = 0; p < n; p++) {\n          y = v[(p + 1) % n];\n          mx = (z >>> 5 ^ y << 2) + (y >>> 3 ^ z << 4) ^ (sum ^ y) + (k[p & 3 ^ e] ^ z);\n          z = v[p] += mx;\n        }\n      }\n\n      return v;\n    }\n    /**\n     * XXTEA: decodes array of unsigned 32-bit integers using 128-bit key.\n     *\n     * @param   {number[]} v - Data vector.\n     * @param   {number[]} k - Key.\n     * @returns {number[]} Decoded vector.\n     */\n\n  }, {\n    key: \"decode\",\n    value: function decode(v, k) {\n      var n = v.length;\n      var delta = 0x9e3779b9;\n      var q = Math.floor(6 + 52 / n);\n      var z = v[n - 1],\n          y = v[0];\n      var mx,\n          e,\n          sum = q * delta;\n\n      while (sum != 0) {\n        e = sum >>> 2 & 3;\n\n        for (var p = n - 1; p >= 0; p--) {\n          z = v[p > 0 ? p - 1 : n - 1];\n          mx = (z >>> 5 ^ y << 2) + (y >>> 3 ^ z << 4) ^ (sum ^ y) + (k[p & 3 ^ e] ^ z);\n          y = v[p] -= mx;\n        }\n\n        sum -= delta;\n      }\n\n      return v;\n    }\n    /**\n     * Converts string to array of longs (each containing 4 chars).\n     * @private\n     */\n\n  }, {\n    key: \"strToLongs\",\n    value: function strToLongs(s) {\n      // note chars must be within ISO-8859-1 (Unicode code-point <= U+00FF) to fit 4/long\n      var l = new Array(Math.ceil(s.length / 4));\n\n      for (var i = 0; i < l.length; i++) {\n        // note little-endian encoding - endianness is irrelevant as long as it matches longsToStr()\n        l[i] = s.charCodeAt(i * 4) + (s.charCodeAt(i * 4 + 1) << 8) + (s.charCodeAt(i * 4 + 2) << 16) + (s.charCodeAt(i * 4 + 3) << 24);\n      } // note running off the end of the string generates nulls since bitwise operators treat NaN as 0\n\n\n      return l;\n    }\n    /**\n     * Converts array of longs to string.\n     * @private\n     */\n\n  }, {\n    key: \"longsToStr\",\n    value: function longsToStr(l) {\n      var str = '';\n\n      for (var i = 0; i < l.length; i++) {\n        str += String.fromCharCode(l[i] & 0xff, l[i] >>> 8 & 0xff, l[i] >>> 16 & 0xff, l[i] >>> 24 & 0xff);\n      }\n\n      return str;\n    }\n    /* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */\n\n    /**\n     * Encodes multi-byte string to utf8 - monsur.hossa.in/2012/07/20/utf-8-in-javascript.html\n     */\n\n  }, {\n    key: \"utf8Encode\",\n    value: function utf8Encode(str) {\n      return unescape(encodeURIComponent(str));\n    }\n    /**\n     * Decodes utf8 string to multi-byte\n     */\n\n  }, {\n    key: \"utf8Decode\",\n    value: function utf8Decode(utf8Str) {\n      try {\n        return decodeURIComponent(escape(utf8Str));\n      } catch (e) {\n        return utf8Str; // invalid UTF-8? return as-is\n      }\n    }\n    /**\n     * Encodes base64 - developer.mozilla.org/en-US/docs/Web/API/window.btoa, nodejs.org/api/buffer.html\n     */\n\n  }, {\n    key: \"base64Encode\",\n    value: function base64Encode(str) {\n      if (typeof btoa != 'undefined') return btoa(str); // browser\n\n      if (typeof Buffer != 'undefined') return new Buffer(str, 'binary').toString('base64'); // Node.js\n\n      throw new Error('No Base64 Encode');\n    }\n    /**\n     * Decodes base64\n     */\n\n  }, {\n    key: \"base64Decode\",\n    value: function base64Decode(b64Str) {\n      if (typeof atob == 'undefined' && typeof Buffer == 'undefined') throw new Error('No base64 decode');\n\n      try {\n        if (typeof atob != 'undefined') return atob(b64Str); // browser\n\n        if (typeof Buffer != 'undefined') return new Buffer(b64Str, 'base64').toString('binary'); // Node.js\n      } catch (e) {\n        throw new Error('Invalid ciphertext');\n      }\n    }\n  }]);\n\n  return Tea;\n}();\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../node_modules/buffer/index.js */ \"./node_modules/buffer/index.js\").Buffer))\n\n//# sourceURL=webpack:///./src/main/components/crypto.js?");

/***/ }),

/***/ "./src/main/components/errors/CmdValidationError.js":
/*!**********************************************************!*\
  !*** ./src/main/components/errors/CmdValidationError.js ***!
  \**********************************************************/
/*! exports provided: CmdValidationError */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CmdValidationError\", function() { return CmdValidationError; });\nclass CmdValidationError extends Error {\n  /**\n   * @param {String} cmd Command name \n   * @param {String} msg Error msg\n   */\n  constructor(cmd, msg) {\n      super(`${cmd}: ${msg}`);\n      this.type = 'CmdValidationError';\n  }\n}\n\n\n//# sourceURL=webpack:///./src/main/components/errors/CmdValidationError.js?");

/***/ }),

/***/ "./src/main/components/fs/FileSystem.js":
/*!**********************************************!*\
  !*** ./src/main/components/fs/FileSystem.js ***!
  \**********************************************/
/*! exports provided: FileSystem */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FileSystem\", function() { return FileSystem; });\n/* harmony import */ var _FsUnit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./FsUnit */ \"./src/main/components/fs/FsUnit.js\");\n/* harmony import */ var _FsDir__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./FsDir */ \"./src/main/components/fs/FsDir.js\");\n\n\n\n/**\n * File system management. Contain current user pointer.\n * Creates root directory\n * TODO: Add restore method, that will allow to recreate fs from plain object\n * TOOD: Add toPlain method\n * With such methods we could be able to store fs in user storage\n */\nclass FileSystem {\n  constructor() {\n    this.root = new _FsDir__WEBPACK_IMPORTED_MODULE_1__[\"FsDir\"](_FsUnit__WEBPACK_IMPORTED_MODULE_0__[\"FS_ROOT_NAME\"]);\n    this.pointer = this.root;\n  }\n\n  /**\n   * Change pointer to passed directory\n   * TODO: Fix exception throwing\n   *\n   * @param {String[]} pathTo\n   */\n  cd(pathTo) {\n    const unit = this.get(pathTo);\n    if (!unit) {\n      throw new Error('Invalid path');\n    }\n    if (unit.type != _FsUnit__WEBPACK_IMPORTED_MODULE_0__[\"FS_UNIT_TYPE\"].DIR) {\n      throw new Error(`${pathTo} is not a directory`);\n    }\n    this.pointer = unit;\n  }\n\n  /**\n   * Get formatted path according to pointer\n   *\n   * @returns {String}\n   */\n  pwd() {\n    let current = this.pointer;\n\n    if (current === this.root) {\n      return '/';\n    } else {\n      const path = [];\n      do {\n        path.push(current.name)\n        current = current.parentDir;\n      } while (current !== this.root);\n      return `/${path.reverse().join('/')}`;\n    }\n  }\n\n  /**\n   * Get root dir content\n   *\n   * @returns {FsUnit[]}\n   */\n  get content() {\n    return this.root.content;\n  }\n\n  /**\n   * Get byte size of root dir\n   *\n   * @returns {Number}\n   */\n  get size() {\n    return this.root.size;\n  }\n\n  /**\n   * Create new dir or file in passed location.\n   * Check if location exists\n   * TODO: Fix exceptions\n   *\n   * @param {FsUnit} fsUnit\n   * @param {String[]} fsUnitPath  Full path to fsUnit. Should not contain new unit name\n   * @returns {FsUnit}\n   */\n  add(fsUnit, fsUnitPath) {\n    if (fsUnitPath.length > 1) {\n      if (fsUnit.name !== fsUnitPath[fsUnitPath - 1]) {\n        throw new Error('Last element of path should contain fs unit name');\n      }\n      const parentUnit = this.get(fsUnitPath.slice(0, -1));\n      if (!parentUnit) {\n        throw new Error('Unit not exists');\n      }\n      if (parentUnit.type !== _FsUnit__WEBPACK_IMPORTED_MODULE_0__[\"FS_UNIT_TYPE\"].DIR) {\n        throw new Error('Should be directory');\n      }\n      fsUnit.parentDir = parentUnit;\n      parentUnit.update(fsUnit);\n    } else {\n      fsUnit.parentDir = this.root;\n      this.root.update(fsUnit);\n    }\n    return fsUnit;\n  }\n\n  // TODO: implement removal method\n  remove(fsUnit) {\n    if (fsUnitPath.length > 1) {\n\n    } else {\n      fsUnit.parentDir = this.root;\n      this.root.remove(fsUnit);\n    }\n  }\n\n  /**\n   * Get file or dir by full path\n   *\n   * @param {String[]} fsUnitPath\n   * @returns {FsUnit|undefined}\n   */\n  get(fsUnitPath) {\n    if (fsUnitPath.length >= 1) {\n      let unit = undefined;\n      let unitPosition = 0;\n      do {\n        if (unitPosition == 0) {\n          unit = this.root.get(fsUnitPath[unitPosition]);\n        } else if (unit.type == _FsUnit__WEBPACK_IMPORTED_MODULE_0__[\"FS_UNIT_TYPE\"].DIR) {\n          unit = unit.get(fsUnitPath[unitPosition]);\n        }\n        unitPosition++;\n      } while(unitPosition < fsUnitPath.length && unit);\n      return unit;\n    } else {\n      return this.root;\n    }\n  }\n}\n\n//# sourceURL=webpack:///./src/main/components/fs/FileSystem.js?");

/***/ }),

/***/ "./src/main/components/fs/FsDir.js":
/*!*****************************************!*\
  !*** ./src/main/components/fs/FsDir.js ***!
  \*****************************************/
/*! exports provided: FsDir */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FsDir\", function() { return FsDir; });\n/* harmony import */ var _FsUnit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./FsUnit */ \"./src/main/components/fs/FsUnit.js\");\n\n\n/**\n * Directory. Has a Map structure under the hood\n *\n * @param {String} name\n */\nclass FsDir extends _FsUnit__WEBPACK_IMPORTED_MODULE_0__[\"FsUnit\"] {\n  constructor(name) {\n    super(name, _FsUnit__WEBPACK_IMPORTED_MODULE_0__[\"FS_UNIT_TYPE\"].DIR);\n    this._content = new Map();\n    this._parent = this;\n  }\n\n  /**\n   * Add file or dir into directory\n   *\n   * @param {FsUnit} fsUnit\n   */\n  add(fsUnit) {    \n    return this.update(fsUnit);\n  }\n\n  /**\n   * Add file or dir into directory\n   *\n   * @param {FsUnit} fsUnit\n   * @returns {FsUnit}\n   */\n  update(fsUnit) {\n    fsUnit.parentDir = this;\n\n    this._content.set(fsUnit.name, fsUnit);\n    return fsUnit;\n  }\n\n  /**\n   * Delete directory content\n   *\n   * @param {FsUnit} fsUnit\n   * @returns {Boolean}\n   */\n  remove(fsUnit) {\n    this._content.delete(fsUnit.name);\n    return true;\n  }\n\n  /**\n   * Get directory content as list\n   *\n   * @returns {FsUnit[]}\n   */\n  get content() {\n    const dirContent = [];\n    for (const [key] of this._content) {\n      dirContent.push(this._content.get(key));\n    }\n    return dirContent;\n  }\n\n  /**\n   * Get directory byte size.\n   * Calculate overallsize of every element of dir\n   *\n   * @returns {Number}\n   */\n  get size() {\n    let overallSize = 0;\n    this.content.forEach(it => {\n      overallSize += it.size\n    });\n    return overallSize;\n  }\n\n  /**\n   * Get directory element by name\n   *\n   * @param {String} name Name of file or dir\n   * @returns {FsUnit|undefined}\n   */\n  get(name) {\n    return this._content.get(name);\n  }\n}\n\n\n//# sourceURL=webpack:///./src/main/components/fs/FsDir.js?");

/***/ }),

/***/ "./src/main/components/fs/FsFile.js":
/*!******************************************!*\
  !*** ./src/main/components/fs/FsFile.js ***!
  \******************************************/
/*! exports provided: FsFile */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(Buffer) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FsFile\", function() { return FsFile; });\n/* harmony import */ var _FsUnit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./FsUnit */ \"./src/main/components/fs/FsUnit.js\");\n\n\n/**\n * File\n *\n * @param {String} name\n * @param {String} content\n */\nclass FsFile extends _FsUnit__WEBPACK_IMPORTED_MODULE_0__[\"FsUnit\"] {\n  constructor(name, content) {\n    super(name, _FsUnit__WEBPACK_IMPORTED_MODULE_0__[\"FS_UNIT_TYPE\"].FILE);\n    this._checkContent(content);\n    this._content = content;\n    this._setSize(content);\n    this._parent = undefined;\n  }\n\n  /**\n   * Set file content. recalculate size\n   *\n   * @param {String} content\n   */\n  update(content) {\n    this._checkContent(content);\n    this._content = content;\n    this._setSize(content);\n  }\n\n  /**\n   * Check is content is string\n   *\n   * @param {String} content\n   */\n  _checkContent(content) {\n    if (typeof content !== 'string') {\n      throw new Error('Invalid file content');\n    }\n  }\n\n  /**\n   * Set content byte size\n   *\n   * @param {String} content\n   */\n  _setSize(content) {\n    if (Blob) {\n      this._size = new Blob([content]).size;\n    } else {\n      this._size = Buffer.byteLength(content, 'utf-8');\n    }\n  }\n}\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../node_modules/buffer/index.js */ \"./node_modules/buffer/index.js\").Buffer))\n\n//# sourceURL=webpack:///./src/main/components/fs/FsFile.js?");

/***/ }),

/***/ "./src/main/components/fs/FsUnit.js":
/*!******************************************!*\
  !*** ./src/main/components/fs/FsUnit.js ***!
  \******************************************/
/*! exports provided: FS_UNIT_TYPE, FS_ROOT_NAME, FsUnit */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FS_UNIT_TYPE\", function() { return FS_UNIT_TYPE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FS_ROOT_NAME\", function() { return FS_ROOT_NAME; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FsUnit\", function() { return FsUnit; });\nconst FS_UNIT_TYPE = {\n  FILE: 'f',\n  DIR: 'd',\n  LINK: 'ln'\n};\n\n\nconst FS_ROOT_NAME = ':';\n\n/**\n * Generic class for file system objects\n *\n * @param {String} name\n * @param {String} type From FS_UNIT_TYPE enum\n */\nclass FsUnit {\n  constructor(name, type) {\n    this.name = name;\n    this.type = type;\n    this.access = '';\n    this.lastMod = Date.now()\n    this._content = {};\n    this._size = 0;\n  }\n\n  get content() {\n    return this._content;\n  }\n\n  /**\n   * Content size in bytes\n   *\n   * @returns {Number}\n   */\n  get size() {\n    return this._size;\n  }\n\n  /**\n   * @returns {String[]}\n   */\n  get path() {\n    let current = this;\n    const path = [];\n    if (current.name !== FS_ROOT_NAME) {\n      do {\n        path.push(current.name);\n        current = current.parentDir;\n      } while (current.name !== FS_ROOT_NAME);\n    }\n    return path.reverse();\n  }\n\n  /**\n   * Set link to parent FsUnit Object\n   *\n   * @param {FsUnit} parentDir\n   */\n  set parentDir(parentDir) {\n    if (parentDir.type !== FS_UNIT_TYPE.DIR) {\n      throw new Error('Parent should be FsDir!');\n    }\n    this._parent = parentDir;\n  }\n\n  /**\n   * Link to parent FsUnit Object\n   *\n   * @returns {FsUnit} parentDir\n   */\n  get parentDir() {\n    return this._parent;\n  }\n\n  /**\n   * @returns {Boolean}\n   */\n  isFile() {\n    return this.type === FS_UNIT_TYPE.FILE;\n  }\n\n  /**\n   * @returns {Boolean}\n   */\n  isDir() {\n    return this.type === FS_UNIT_TYPE.DIR;\n  }\n}\n\n//# sourceURL=webpack:///./src/main/components/fs/FsUnit.js?");

/***/ }),

/***/ "./src/main/components/fs/utils.js":
/*!*****************************************!*\
  !*** ./src/main/components/fs/utils.js ***!
  \*****************************************/
/*! exports provided: fsToXML */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fsToXML\", function() { return fsToXML; });\n/* harmony import */ var _FsUnit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./FsUnit */ \"./src/main/components/fs/FsUnit.js\");\n\n\n/**\n * Convert FsUnit object into xml format\n *\n * @param {FsUnit} fsUnit\n * @returns {String}\n */\nfunction fsUnitToXML(fsUnit) {\n  if (fsUnit.type == _FsUnit__WEBPACK_IMPORTED_MODULE_0__[\"FS_UNIT_TYPE\"].FILE) {\n    const filePath = fsUnit.path.slice(0, -1);\n    const renderedPath = filePath.length ?\n    `/${filePath.join('/')}/` :\n    `/`\n    return `\n      <f name='${fsUnit.name}' path='${renderedPath}'>\n        <contents>${fsUnit.content}</contents>\n      </f>\n    `;\n\n  } else if (fsUnit.type == _FsUnit__WEBPACK_IMPORTED_MODULE_0__[\"FS_UNIT_TYPE\"].DIR) {\n    // Recursevly process directory element\n    return `\n      <d name='${fsUnit.name}' path='/${fsUnit.path.join('/')}/'>\n        <c>\n          ${fsUnit.content.map(it => fsUnitToXML(it)).join('\\n')}\n        </c>\n      </d>\n    `;\n  }\n}\n\n/**\n * Convert whole file system into xml\n *\n * @param {FileSystem} fs\n * @returns {String}\n */\nfunction fsToXML(fs) {\n  return `\n    <d name='/' path='/'>\n      <c>\n        ${fs.content.map(it => fsUnitToXML(it)).join('\\n')}\n      </c>\n    </d>\n  `\n}\n\n\n//# sourceURL=webpack:///./src/main/components/fs/utils.js?");

/***/ }),

/***/ "./src/main/components/keysMap.js":
/*!****************************************!*\
  !*** ./src/main/components/keysMap.js ***!
  \****************************************/
/*! exports provided: KEY_CODE_MAP */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"KEY_CODE_MAP\", function() { return KEY_CODE_MAP; });\nconst KEY_CODE_MAP = {\n  KEY_UP: 38,\n  KEY_DOWN: 40,\n  KEY_TAB: 9,\n  KEY_ENTER: 13,\n  MAX_HISTORY: 20\n};\n\n\n//# sourceURL=webpack:///./src/main/components/keysMap.js?");

/***/ }),

/***/ "./src/main/components/path/PathHelper.js":
/*!************************************************!*\
  !*** ./src/main/components/path/PathHelper.js ***!
  \************************************************/
/*! exports provided: PathHelper */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PathHelper\", function() { return PathHelper; });\nclass PathHelper {\n  /**\n   *\n   * @param {String} path1\n   * @param {String} path2 Unix-like path. Absolute or relative\n   * @returns {String[]}\n   */\n  static resolveToArray(path1, path2) {\n      const goingBackwardsSymb = '..';\n      const mainPath = path1.split('/').filter(it => it.length);\n      const foreignPath = path2.split('/').filter(it => it.length);\n\n      if (foreignPath.includes('..')) {\n          foreignPath.forEach(pathElement => {\n              if (pathElement !== goingBackwardsSymb) {\n                  mainPath.push(pathElement);\n              } else {\n                  if (!mainPath[mainPath.length - 1]) {\n                      throw new Error('Invalid path');\n                  }\n                  mainPath.pop();\n              }\n          });\n          return mainPath;\n      } else {\n          return mainPath.concat(foreignPath);\n      }\n  }\n\n  /**\n   * Determine if the passed value is the proper format for a directory.\n   */\n  static isValidDirectory(filename) {\n      if (filename == '') {\n          return false;\n      }\n      var newFilename = filename.replace(/[^A-Za-z\\d\\.\\-_~]/, '');   // Remove all but allowed chars.\n      if (newFilename.length != filename.length) {\n          return false;\n      }\n      // Check for more than 1 period in a row. TODO: Do we even need this protection? Don't want people creating a dir called '..'.\n      var foundPeriods = newFilename.match(/\\.\\./g);\n      if (foundPeriods != null && foundPeriods.length > 1) {\n          return false;\n      }\n      return true;\n  }\n\n  /**\n   * Determine if the passed value is the proper format for a file name.\n   */\n  static isValidFilename(filename) {\n      if (filename == '') {\n          return false;\n      }\n      var newFilename = filename.replace(/[^A-Za-z\\d\\.\\-_~]/, '');   // Remove all but allowed chars.\n      if (newFilename.length != filename.length) {\n          return false;\n      }\n      // Check for more than 1 period in a row. TODO: Do we even need this protection? Don't want people creating a dir called '..'.\n      var foundPeriods = newFilename.match(/\\.\\./g);\n      if (foundPeriods != null && foundPeriods.length > 1) {\n          return false;\n      }\n      return true;\n  }\n\n  /**\n   * Determine if the passed value is the proper format for a directory path (no file name at end).\n   */\n  static isValidDirectoryPath(filename) {\n      if (filename == '') {\n          return false;\n      }\n      var newFilename = filename.replace(/[^A-Za-z\\d\\/\\-_~]/, '');   // Remove all but allowed chars.\n      newFilename = newFilename.replace(/(\\/)\\/+/g, \"$1\");    // Remove any double slashes.\n      if (newFilename.length != filename.length) {\n          return false;\n      }\n      return true;\n  }\n\n  /**\n   * Get the directory part of a filepath. What's before the final slash. Add a final slash if not there.\n   * assumeDirectory - if true, no slashes means assume it's meant to be a directory name.\n   */\n  static getDirectoryPart(filepath, assumeDirectory) {\n      var dirs = '';\n      if (filepath == '') {\n          return false;\n      }\n      if (assumeDirectory && this.isValidDirectory(filepath)) {\n          dirs = filepath;\n      } else if (!assumeDirectory && this.isValidFilename(filepath)) {\n          return false;\n      } else {\n          dirs = filepath.substring(0, filepath.lastIndexOf(\"/\"));  // The path without the trailing portion.\n      }\n      return dirs + \"/\";\n  }\n\n  /**\n   * Get the ending part of a filepath (the filename). What's after the final slash.\n   * assumeFile - if true, no slashes means assume it's meant to be a directory name.\n   */\n  static getFilenamePart(filepath, assumeFile) {\n      if (filepath == '') {\n          return false;\n      }\n      if (assumeFile && this.isValidFilename(filepath)) {\n          return filepath;\n      } else if (!assumeFile && this.isValidDirectory(filepath)) {\n          return false;\n      }\n      var name = filepath.split('\\\\').pop().split('/').pop(); // Get the final part (file name).\n      if (name == '') {\n          return false;\n      }\n      return name;\n  }\n\n  /**\n   * Parse a path into a selector for finding a directory node.\n   */\n  static parseDirPathToSelector(path) {\n      if (path == \"/\" || path == \"~\") {\n          return \"d[path='/'][name='/']\";\n      }\n      path = path.replace(/\\/+$/, \"\");  // Remove trailing slash.\n      var name = path.split('\\\\').pop().split('/').pop();  // Get the last part - either a file name or a dir name without a trailing slash.\n      var dirs = path.substring(0, path.lastIndexOf(\"/\") + 1);  // The path without the trailing portion.\n      return \"d[path='\" + dirs + name + \"/'][name='\" + name + \"']\";  // Create a node selector for a directory.\n  }\n\n  /**\n   * Parse a path with filename into a selector for finding a file node.\n   */\n  static parseFilePathToSelector(path) {\n      var name = path.split('\\\\').pop().split('/').pop(); // Get the final part (file name).\n      var dirs = path.substring(0, path.lastIndexOf(\"/\") + 1);  // The path without the trailing portion.\n      return \"f[path='\" + dirs + \"'][name='\" + name + \"']\";  // Create a node selector for a file.\n  }\n}\n\n\n//# sourceURL=webpack:///./src/main/components/path/PathHelper.js?");

/***/ }),

/***/ "./src/main/components/utils.js":
/*!**************************************!*\
  !*** ./src/main/components/utils.js ***!
  \**************************************/
/*! exports provided: getAllMethodNames */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getAllMethodNames\", function() { return getAllMethodNames; });\nfunction getAllMethodNames(obj) {\n  let methods = new Set();\n  while (obj = Reflect.getPrototypeOf(obj)) {\n    let keys = Reflect.ownKeys(obj);\n    keys.forEach((k) => {\n      methods.add(k);\n    });\n  }\n  return [...methods];\n}\n\n//# sourceURL=webpack:///./src/main/components/utils.js?");

/***/ }),

/***/ "./src/main/filesystem.js":
/*!********************************!*\
  !*** ./src/main/filesystem.js ***!
  \********************************/
/*! exports provided: initialFilesystem */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"initialFilesystem\", function() { return initialFilesystem; });\n/* harmony import */ var _components_fs_FileSystem__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./components/fs/FileSystem */ \"./src/main/components/fs/FileSystem.js\");\n/* harmony import */ var _components_fs_FsDir__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./components/fs/FsDir */ \"./src/main/components/fs/FsDir.js\");\n/* harmony import */ var _components_fs_FsFile__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./components/fs/FsFile */ \"./src/main/components/fs/FsFile.js\");\n// TODO - Refactor the initial filesystem state to read from a JSON file and then do this conversion.\n\n// Here we create initial file system structure. Changes are saved to LocalStorage.\n// System is reset to this on 'reboot' command.\n\n\n\n\n\nconst initialFilesystem = new _components_fs_FileSystem__WEBPACK_IMPORTED_MODULE_0__[\"FileSystem\"]();\n\ninitialFilesystem\n  .add(new _components_fs_FsDir__WEBPACK_IMPORTED_MODULE_1__[\"FsDir\"]('.tmp-dir'), [])\n\ninitialFilesystem\n  .add(new _components_fs_FsFile__WEBPACK_IMPORTED_MODULE_2__[\"FsFile\"]('.hidden', 'There is a hidden file.'), []);\n\ninitialFilesystem\n  .add(new _components_fs_FsDir__WEBPACK_IMPORTED_MODULE_1__[\"FsDir\"]('docs'), [])\n\ninitialFilesystem\n  .get(['docs'])\n  .add(new _components_fs_FsFile__WEBPACK_IMPORTED_MODULE_2__[\"FsFile\"]('moretodo.txt', 'A, B, C.'))\n\ninitialFilesystem\n  .get(['docs'])\n  .add(new _components_fs_FsFile__WEBPACK_IMPORTED_MODULE_2__[\"FsFile\"]('ok.txt', 'I am ok.'))\n\ninitialFilesystem\n  .get(['docs'])\n  .add(new _components_fs_FsFile__WEBPACK_IMPORTED_MODULE_2__[\"FsFile\"](\n    'shoplist.txt',\n      `-Apples\\n-Bananas\\n-Cookies`\n      )\n    );\n\ninitialFilesystem\n  .get(['docs'])\n  .add(new _components_fs_FsDir__WEBPACK_IMPORTED_MODULE_1__[\"FsDir\"]('private'))\n\ninitialFilesystem\n  .get(['docs', 'private'])\n  .add(new _components_fs_FsFile__WEBPACK_IMPORTED_MODULE_2__[\"FsFile\"]('secret.txt', 'PxNmGkl6M+jDP4AYAKZET18SEnWD5qw5LIP9174lONWslF144K9VHFIk1JA='))\n\ninitialFilesystem\n  .get(['docs', 'private'])\n  .add(new _components_fs_FsDir__WEBPACK_IMPORTED_MODULE_1__[\"FsDir\"]('opt'))\n\ninitialFilesystem\n  .get(['docs'])\n  .add(new _components_fs_FsDir__WEBPACK_IMPORTED_MODULE_1__[\"FsDir\"]('tmp'))\n\ninitialFilesystem\n  .add(new _components_fs_FsDir__WEBPACK_IMPORTED_MODULE_1__[\"FsDir\"]('more'), [])\n  .add(new _components_fs_FsFile__WEBPACK_IMPORTED_MODULE_2__[\"FsFile\"]('moretodo.txt', `Don't forget this other stuff.`))\n\ninitialFilesystem\n  .add(new _components_fs_FsDir__WEBPACK_IMPORTED_MODULE_1__[\"FsDir\"]('stuff'), [])\n\ninitialFilesystem\n  .add(new _components_fs_FsFile__WEBPACK_IMPORTED_MODULE_2__[\"FsFile\"]('cool.txt', 'There is a hidden command in this terminal called \\'secret\\'.'), []);\n\n\n//# sourceURL=webpack:///./src/main/filesystem.js?");

/***/ }),

/***/ "./src/main/index.js":
/*!***************************!*\
  !*** ./src/main/index.js ***!
  \***************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./version */ \"./src/main/version.js\");\n/* harmony import */ var _app_Cmd__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./app/Cmd */ \"./src/main/app/Cmd.js\");\n/* harmony import */ var _app_Terminal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./app/Terminal */ \"./src/main/app/Terminal.js\");\n/* harmony import */ var _boot__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./boot */ \"./src/main/boot.js\");\n/* harmony import */ var _filesystem__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./filesystem */ \"./src/main/filesystem.js\");\n\n\n\n\n\n\nfunction extendObject(n, r) { for (var e in r) r.hasOwnProperty(e) && (n[e] = r[e]); return n }\n\nconst termFaker = new _app_Terminal__WEBPACK_IMPORTED_MODULE_2__[\"Terminal\"]({\n  useBootLoader: TF_CONFIG_BOOT_LOADER,\n  bootMessageLines: _boot__WEBPACK_IMPORTED_MODULE_3__[\"bootMessageLines\"]\n});\n\n// Set the command prompt style:\nconst customPrompt = () => { return \"guest@TermFake:~\"+termFaker.path+\"$ \";};\nconst commands = extendObject(new _app_Cmd__WEBPACK_IMPORTED_MODULE_1__[\"TerminalCommands\"](termFaker), customCommands);\n\n// Initialize & show the terminal:\ntermFaker.init(\n  document.getElementById(TF_CONFIG_ELEMENT_ID),\n  commands,\n  customPrompt,\n  _filesystem__WEBPACK_IMPORTED_MODULE_4__[\"initialFilesystem\"]\n);\n\n\n//# sourceURL=webpack:///./src/main/index.js?");

/***/ }),

/***/ "./src/main/version.js":
/*!*****************************!*\
  !*** ./src/main/version.js ***!
  \*****************************/
/*! exports provided: version */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"version\", function() { return version; });\nconst version = '1.6.0';  // Used in various commands.\n\n\n//# sourceURL=webpack:///./src/main/version.js?");

/***/ })

/******/ });